#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# 
S3_BUCKET="cl-heroku"
CCL_PACKAGE="http://${S3_BUCKET}.s3.amazonaws.com/ccl-1.7.tgz"
CCL_PACKAGE=ftp://ftp.clozure.com/pub/release/1.8/ccl-1.8-linuxx86.tar.gz

# parse and derive params
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd) # absolute path of buildpack
BUILD_DIR=$1
CACHE_DIR=$2

echo "-----> compile params: $BUILD_DIR $CACHE_DIR"

if [ $RESET_CACHE ]; then
  echo "-----> flushing cache"
  rm -rf $CACHE_DIR/*
fi

CCL_DIR="$CACHE_DIR/ccl"
SBCL_DIR="$CACHE_DIR/sbcl"

#temporary
rm -rf $CCL_DIR
rm -rf $SBCL_DIR

echo "-----> Installing ccl"
if [ ! -d $CCL_DIR ]; then
    echo "-----> Fetching ccl"    
    curl $CCL_PACKAGE -s -o -  | tar xzf - -C $CACHE_DIR
fi

# add to slug 
cp -r $CCL_DIR $BUILD_DIR

echo "ccl installed" | indent

if [ ! -d $CCL_DIR ]; then
    echo "-----> Fetching sbcl"    
    SBCL_PACKAGE="http://sbcl-heroku.s3.amazonaws.com/sbcl-1.0.54-x86-64-linux-binary.tar.bz2"
    curl $SBCL_PACKAGE -s -o -  | tar xjf - -C $SBCL_DIR
fi
# add to slug 
cp -r $SBCL_DIR $BUILD_DIR
echo "sbcl installed" | indent

# setting up paths for building

export BUILDPACK_DIR
export CACHE_DIR
export BUILD_DIR
export CCL_DEFAULT_DIRECTORY=$CCL_DIR

echo "-----> Starting build"
$CCL_DEFAULT_DIRECTORY/scripts/ccl64 --load "$BUILDPACK_DIR/setup/compile.lisp" --eval "(ccl:quit)"
echo "-----> Build finished"
